<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="pers.justin.preselectioncourses.mapper.CsUserMapper">
    <resultMap id="BaseResultMap" type="pers.justin.preselectioncourses.entity.CsUser">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="user_code" property="userCode" jdbcType="VARCHAR"/>
        <result column="classes" property="classes" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="is_delete" property="isDelete" jdbcType="BIT"/>
        <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, role_name, creator, create_time, is_delete, delete_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from cs_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUsernameAndPassword" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from cs_user
        where username = #{username} and password = #{password}
    </select>
    <select id="queryUser" resultMap="BaseResultMap">
        select id, username,user_code, classes
        from cs_user
        where role_name = #{roleName}
        and is_delete = false
        <if test="username != null">
            and username like concat('%',#{username},'%')
        </if>
    </select>
    <select id="queryUser2" resultType="java.util.Map">
        select cu.username, co.name, cu.user_code, cu.classes
        from cs_user cu
                 inner join cs_selection ce on cu.id = ce.user_id
                 inner join cs_course co on ce.cou_id = co.id
        where co.status = false and co.is_delete = false and cu.role_name = #{roleName} and cu.is_delete = false
        <if test="username">
            and cu.username like concat('%',#{username},'%')
        </if>
        <if test="couName">
            and co.name like concat('%',#{couName},'%')
        </if>
    </select>
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        update cs_user
        set is_delete   = true,
            delete_time = now()
        where id = #{userId,jdbcType=INTEGER}
    </update>
    <insert id="insert" parameterType="pers.justin.preselectioncourses.entity.CsUser">
        insert into cs_user (id, username, user_code, classes, password,
                             role_name, creator, create_time,
                             is_delete, delete_time)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userCode}, #{classes}, #{password,jdbcType=VARCHAR},
                #{roleName,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{isDelete,jdbcType=BIT}, #{deleteTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="pers.justin.preselectioncourses.entity.CsUser">
        insert into cs_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="deleteTime != null">
                delete_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=BIT},
            </if>
            <if test="deleteTime != null">
                #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="pers.justin.preselectioncourses.entity.CsUser">
        update cs_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=BIT},
            </if>
            <if test="deleteTime != null">
                delete_time = #{deleteTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="pers.justin.preselectioncourses.entity.CsUser">
        update cs_user
        set username    = #{username,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            role_name   = #{roleName,jdbcType=VARCHAR},
            creator     = #{creator,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            is_delete   = #{isDelete,jdbcType=BIT},
            delete_time = #{deleteTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>